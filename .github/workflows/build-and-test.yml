name: Test Python

on:
  pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-1.2.2-${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: pytestdeps-ubuntu-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --with dev
        if: steps.cache-deps.outputs.cache-hit != 'true'
      
      - name: run tests
        run: poetry run pytest

  mac:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-1.2.2-${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: pytestdeps-mac-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --with dev
        if: steps.cache-deps.outputs.cache-hit != 'true'
      
      - name: run tests
        run: poetry run pytest